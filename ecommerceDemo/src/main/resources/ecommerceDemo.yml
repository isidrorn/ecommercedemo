openapi: "3.0.0"
info:
  version: 1.0.0
  title: eCommerce Demo
  license:
    name: MIT
paths:
  /products:
    get:
      summary: List all products
      operationId: getproducts
      tags:
        - products
      parameters:
        - in: query
          name: productId
          schema:
            type: integer
            minimum: 1
          description: Numeric ID of the product to get 
          example: 1
          required: true
        - in: query
          name: brandId
          schema:
            type: integer
            minimum: 1
          description: Numeric ID of the Brand offering the product
          example: 1
          required: true
        - in: query
          name: startDate
          schema:
            type: string
            pattern: '^\d{4}-\d{2}-\d{2}-\d{2}.\d{2}.\d{2}$'
          description: Price start date of product
          example: 2023-05-11-12.34.56
          required: true
      responses:
        '200':
          description: A Product object
          content:
            application/json:
              schema:
                type: object
                properties:
                  brandId:
                    type: integer
                    description: The brand ID.
                  productId:
                    type: string
                    description: The product ID.
                  priority:
                    type: integer
                    description: The product priority.
                  startDate:
                    type: string
                    description: The product price start date.
                  price:
                    type: float
                    description: The product price.
                  endDate:
                    type: string
                    description: The product price end date.
                  priceList:
                    type: integer
                    description: The applicable fee ID.
                  currency:
                    type: string
                    description: The product price currency.
        '400':
          description: Bad request. Product ID must be an integer and larger than 0. Brand ID must be an integer and larger than 0. Start date must be a string YYYY-MM-DD-HH.MM.SS
        '404':
          description: A product with the specified ID or brand ID was not found.
        '5XX':
          description: Unexpected error.
components:
  schemas:
    Product:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        brandId:
          type: integer
          description: The brand ID.
        priority:
          type: integer
          description: The product priority.
        startDate:
          type: string
          description: The product price start date.
        price:
          type: float
          description: The product price.
        endDate:
          type: string
          description: The product price end date.
        priceList:
          type: integer
          description: The applicable fee ID.
        currency:
          type: string
          description: The product price currency.
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string